{"id":"808dfc97-ba6a-41d7-acc7-dbd1be4b5d4c","zed":"context","version":"0.4.0","text":"\n\n\n```yaml compose/.github/workflows/test.yaml\nname: Test\n\non:\n  push:\n    branches:\n      - main\n  pull_request:\n    branches:\n      - main\n\njobs:\n  test-tailscale:\n    name: Test Tailscale connectivity\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v4\n\n      - name: Setup Tailscale\n        uses: tailscale/github-action@v2\n        with:\n          oauth-client-id: ${{ secrets.TAILSCALE_OAUTH_CLIENT_ID }}\n          oauth-secret: ${{ secrets.TAILSCALE_OAUTH_SECRET }}\n          tags: tag:ci\n\n      - name: Test Tailscale connectivity\n        run: |\n          tailscale ping --verbose --timeout 10s --c 5 --until-direct=false dev-m1sk9-s1\n\n  test-compose:\n    name: Test compose files\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v4\n\n      - name: Testing compose files\n        run: |\n          for dir in $(find . -name 'compose.yaml' -exec dirname {} \\;)\n          do\n              echo \"Testing docker compose in $dir\"\n              cd $dir\n              touch .env\n              docker compose config\n              cd -\n          done\n```\n\nCron で毎日朝5時に実行するようトリガーを設定しつつ，その Cron による実行時は test-tailscale だけを実行するようにして\n以下のように `test.yaml` ファイルを修正して、Cron トリガーを追加し、Cron 実行時には `test-tailscale` ジョブのみを実行するように設定できます。\n\n```yaml\nname: Test\n\non:\n  push:\n    branches:\n      - main\n  pull_request:\n    branches:\n      - main\n  schedule:\n    - cron: '0 5 * * *'  # 毎日朝5時に実行\n\njobs:\n  test-tailscale:\n    name: Test Tailscale connectivity\n    runs-on: ubuntu-latest\n    if: github.event_name != 'schedule' || github.event.schedule == '0 5 * * *'\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v4\n\n      - name: Setup Tailscale\n        uses: tailscale/github-action@v2\n        with:\n          oauth-client-id: ${{ secrets.TAILSCALE_OAUTH_CLIENT_ID }}\n          oauth-secret: ${{ secrets.TAILSCALE_OAUTH_SECRET }}\n          tags: tag:ci\n\n      - name: Test Tailscale connectivity\n        run: |\n          tailscale ping --verbose --timeout 10s --c 5 --until-direct=false dev-m1sk9-s1\n\n  test-compose:\n    name: Test compose files\n    runs-on: ubuntu-latest\n    if: github.event_name != 'schedule'  # Cron 実行時にはこのジョブをスキップ\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v4\n\n      - name: Testing compose files\n        run: |\n          for dir in $(find . -name 'compose.yaml' -exec dirname {} \\;)\n          do\n              echo \"Testing docker compose in $dir\"\n              cd $dir\n              touch .env\n              docker compose config\n              cd -\n          done\n```\n\nこの設定により、`push` や `pull_request` イベントが発生した場合には両方のジョブが実行され、Cron によるスケジュール実行時には `test-tailscale` ジョブのみが実行されます。\n","messages":[{"id":{"replica_id":0,"value":0},"start":0,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":59}}},{"id":{"replica_id":0,"value":44},"start":1298,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":60}}},{"id":{"replica_id":0,"value":45},"start":3055,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":61}}}],"summary":"GitHub Actions Workflow with Cron","slash_command_output_sections":[{"range":{"start":0,"end":1},"icon":"Library","label":"Default","metadata":null},{"range":{"start":3,"end":1136},"icon":"File","label":"compose/.github/workflows/test.yaml","metadata":{"path":"compose/.github/workflows/test.yaml"}}]}